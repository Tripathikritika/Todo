{"version":3,"sources":["Style/Todo.module.css","Redux/actionsTypes.js","Redux/action.js","Components/Todo.jsx","App.js","Redux/localStorage.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["module","exports","mainDiv","addDiv","inputAdd","card","commonColor","buttonBorder","actionsTypes","addTask","payload","type","actionConstant","id","uuidv4","title","status","addCompletedTask","refreshTask","Todo","_useState","useState","_useState2","Object","slicedToArray","taskInput","setTaskInput","_useState3","_useState4","hashTag","setHashTag","todoArray","useSelector","state","reducers","completedTask","completedArray","dispatch","useDispatch","useEffect","hashInput","split","slice","join","react_default","a","createElement","className","concat","styles","onClick","class","onSubmit","e","preventDefault","placeholder","value","name","onChange","target","map","item","key","style","width","border","includes","App","loadData","JSON","parse","localStorage","getItem","saveData","data","setItem","stringify","deleteData","removeItem","initState","rootReducer","combineReducers","arguments","length","undefined","action","toConsumableArray","objectSpread","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3dd35fab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"Todo_mainDiv__hv2wV\",\"addDiv\":\"Todo_addDiv__2_xDx\",\"inputAdd\":\"Todo_inputAdd__2zFe2\",\"card\":\"Todo_card__FH3vn\",\"commonColor\":\"Todo_commonColor__Vs6We\",\"buttonBorder\":\"Todo_buttonBorder__bE9ow\"};","const TODO_ADD = \"TODO_ADD\"\r\nconst TODO_COMPLETED_TASK = \"TODO_COMPLETED_TASK \" \r\nconst RESET_TASK = \"RESET_TASK\"\r\n\r\nexport default {\r\n    TODO_ADD,\r\n    TODO_COMPLETED_TASK,\r\n    RESET_TASK\r\n}","import actionConstant from './actionsTypes'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport const addTask = ( payload ) => ({\r\n    type : actionConstant.TODO_ADD,\r\n    payload : {\r\n        id : uuidv4(),\r\n        title : payload,\r\n        status : true\r\n    }\r\n})\r\n\r\nexport const addCompletedTask = (payload) => ({\r\n    type : actionConstant.TODO_COMPLETED_TASK,\r\n    payload : {\r\n        id : uuidv4(),\r\n        title : payload,\r\n    }\r\n})\r\n\r\nexport const refreshTask = (payload) => ({\r\n    type : actionConstant.RESET_TASK,\r\n})","import React, { useEffect, useState } from 'react'\r\nimport styles from '../Style/Todo.module.css'\r\nimport { addTask ,refreshTask,addCompletedTask } from '../Redux/action'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function Todo() {\r\n    const [ taskInput , setTaskInput ] = useState(\"\")\r\n    const [hashTag ,setHashTag] = useState(\"\")\r\n    const todoArray = useSelector((state) => state.reducers.todoArray)\r\n    const completedTask = useSelector((state) => state.reducers.completedArray)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n       if( taskInput[0] === \"#\"){\r\n           let hashInput =  taskInput.split(\"\").slice(1).join(\"\")\r\n           setHashTag(hashInput)\r\n       }\r\n       \r\n    }, [taskInput])\r\n  \r\n    const handleChange = ( e ) => {\r\n        setTaskInput(e.target.value)\r\n    }\r\n    const handleInputAdd = ( e ) =>{\r\n        e.preventDefault()\r\n        if( taskInput[0] !== '#'){\r\n            dispatch(addTask( taskInput ))\r\n            setTaskInput(\"\")\r\n        }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        dispatch(refreshTask())\r\n    }\r\n\r\n    const handleCompleted = ( title ) => {\r\n        dispatch(addCompletedTask(title))\r\n        setTaskInput(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 text-center\">\r\n                    <h2 className={`${styles.commonColor}`}>Organize Your Day</h2>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className={`row ${styles.mainDiv}`}>\r\n                <div className =\"col-12 d-flex justify-content-end\" >\r\n                    <div className={`btn  m-1 ${styles.buttonBorder}`} onClick={handleReset}><i class=\"fas fa-power-off\"></i> RESET</div>                        \r\n\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <div className={`${styles.addDiv} `}>\r\n                        <div>\r\n                            <form onSubmit = {handleInputAdd}>\r\n                                <input type=\"text\" placeholder=\"Add a task...\" value={taskInput} name ={taskInput} onChange={handleChange} className={`rounded  p-2 ${styles.inputAdd}`}/>\r\n                            </form>\r\n                        </div>\r\n                       \r\n                        <div className=\"text-left\">\r\n                            {\r\n                                todoArray && todoArray.map((item) => \r\n                                    <div key={item.id}>\r\n                                        <div className = \"container p-0\">\r\n                                            <div className = \"row\">\r\n                                                <div className = \"col-12 m-2 d-flex justify-content-center\">\r\n                                                    <div className = {`${styles.card} card`} style={{width:'200px',border:item.title.includes(hashTag) && hashTag !== \"\" ? '3px solid yellow' : null }} onClick={() => handleCompleted(item.title)} >\r\n                                                        <div className = \"card-body\" >\r\n                                                            {item.title}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                completedTask && \r\n                                completedTask.map((item) => \r\n                                <div key={item.id}>\r\n                                   \r\n                                    <div className = \"container\">\r\n                                        <div className = \"row\">\r\n                                            <div className = \"col-12 m-2 d-flex justify-content-center\">\r\n                                                <div className = {`${styles.card} card border-3 `} style={{width:'200px',border:item.title.includes(hashTag) && hashTag !== \"\" ? '3px solid yellow' : \"3px solid green\" }} >\r\n                                                    <div className = \"card-body\" >\r\n                                                        {item.title}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Todo from './Components/Todo'\n\nfunction App() {\n  return (\n    <div>\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","export const loadData = (key) => {\r\n    return JSON.parse(localStorage.getItem(key))\r\n}\r\n\r\nexport const saveData = (key , data ) => {\r\n    localStorage.setItem(key,JSON.stringify(data))\r\n}\r\n\r\nexport const deleteData = (key) => {\r\n    localStorage.removeItem(key);\r\n}\r\n","import actionConstant from './actionsTypes'\r\nimport { loadData,saveData,deleteData } from '../Redux/localStorage'\r\n\r\nconst initState = {\r\n    todoArray : loadData('todoArray') || [],\r\n    status :  loadData('status') || false,\r\n    completedArray : loadData('completedArray') || []\r\n}\r\n\r\nexport default ( state = initState, action ) => {\r\n    switch( action.type ) {\r\n        case actionConstant.TODO_ADD:\r\n            saveData('status' , true )\r\n            saveData('todoArray' , [...state.todoArray , action.payload ] )\r\n            return{\r\n                ...state,\r\n                todoArray : [ action.payload ,...state.todoArray ],\r\n                status : true\r\n            }\r\n        case actionConstant.TODO_COMPLETED_TASK:\r\n            saveData('completedArray' ,  [...state.completedArray , action.payload ] )\r\n            saveData('todoArray' , state.todoArray.filter((item) => item.title !== action.payload.title))\r\n            return{\r\n                ...state,\r\n                completedArray : [ action.payload , ...state.completedArray  ],\r\n                todoArray : state.todoArray.filter((item) => item.title !== action.payload.title)\r\n            }\r\n        case actionConstant.RESET_TASK:\r\n            deleteData('todoArray')\r\n            deleteData('completedArray')\r\n            deleteData('status' )\r\n            return{\r\n                ...state,\r\n                todoArray : [],\r\n                completedArray : []\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}","import { createStore , applyMiddleware , compose, combineReducers } from 'redux'\r\nimport reducers from './reducer'\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst rootReducer = combineReducers({reducers})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport { store } from './Redux/store'\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}